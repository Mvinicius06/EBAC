# -*- coding: utf-8 -*-
"""module_18_exercise_(1) (1) (1).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RBDo_3zlLnDqQ5EdZW4NrpYKxv6mGlTA

<img src="https://raw.githubusercontent.com/andre-marcos-perez/ebac-course-utils/main/media/logo/newebac_logo_black_half.png" alt="ebac-logo">

---

# **Módulo** | Análise de Dados: Controle de Versão I
Caderno de **Exercícios**<br>
Professor [André Perez](https://www.linkedin.com/in/andremarcosperez/)

---

# **Tópicos**

<ol type="1">
  <li>Introdução ao Git;</li>
  <li>Introdução ao GitHub;</li>
  <li>Criando um repositório no GitHub.</li>
</ol>

---

# **Exercícios**

## 1\. Git

O [git](https://git-scm.com/) é um software de controle de versão distribuído de **arquivos**. Nos exercícios desta aula, voce pode utiliza-lo tanto na máquina virtual do Google Colab quanto na sua máquina local.

### **1.1. Google Colab**

Nas máquinas virtuais do Google Colab o `git` já vem instalado.
"""

!git --version

"""### **1.2. Máquina Local**

Em muitos sistemas opeacionais, o `git` já vem pré instalado, utilize o comando abaixo na linha de comando do seu computador (`terminal` no Linux e MacOS ou `cmd` no Windows) para verificar a instalação.

```shell
git --version
```

Se o `git` não estiver instalado na sua maquina, voce pode encontrar instruções de instalação para Linux/MacOS/Windows neste [link](https://www.atlassian.com/br/git/tutorials/install-git). Após seguir as instruções, você pode verificar a instalação com o mesmo comando.

```shell
git --version
```

---

## 2\. GitHub

O GitHub é uma ferramenta online de controle de versão distribuído de **arquivos**.

### **2.1. Criando a uma conta**

Para criar a uma conta na ferramenta, basta acessar este [link](https://github.com), clicar em *sign up* e seguir as instruções.

### **2.2. Criando um projeto**

Nesta etapa vamos configurar o `git` na máquina virtual do Google Colab ou na sua máquina local, as instruções são as mesmas. Para tanto, replique as atividades expostas na aula 3 deste módulo.

> Conta

- Criar uma conta no GitHub.

- Criar um *personal access token*.

- Configurar a conexão entre o `git` local com o `git` remoto (GitHub):
"""

import os

username = "<mvinicius06>" # insira o seu nome de usuário do git
os.environ["GITHUB_USER"] = username

!git config --global user.name "${GITHUB_USER}"

import os
from getpass import getpass

usermail = getpass()
os.environ["GITHUB_MAIL"] = usermail

!git config --global user.email "${GITHUB_MAIL}"

import os
from getpass import getpass

usertoken = getpass()
os.environ["GITHUB_TOKEN"] = usertoken

"""> Projeto

- Criar o projeto **remoto**.

- Fazer o download do projeto **remoto** na máquina **local**, não se esqueça de alterar o link com as informações de usuário e senha.
"""

!git clone https://${GITHUB_USER}:${GITHUB_TOKEN}@https://github.com/Mvinicius06/EBAC/import # insira o link do seu repositório remoto

!git clone https://github.com/Mvinicius06/EBAC/import

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/da-ebac/

""" - Criar um arquivo **hello.py** e salvar as aterações no repositório **local**."""

!touch hello.py
!git status

!git add hello.py
!git status

!git commit -m "arquivo hello.py criado"
!git status

""" - Enviar as alterações para o repositório **remoto**."""

!git push origin main
!git status

"""- Confira o arquivo no seu repositório.

---
"""